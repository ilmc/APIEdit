swagger: "2.0"
info:
  version: "0.0.1"
  title: API Design
  description: These are where ALL Api's will be designed s before developers develop the backend functionality
  termsOfService: There API are definitions only. Some may have some test backend code but this is the playground for designing the interfaces
# during dev, should point to your local machine
host: node4.codenvy.io:34096
# basePath prefixes all resource paths 
basePath: /
# 
tags:
  - name: Hello
    description: World example
  - name: Assignment
    description: Assignments for Learners
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      tags: 
        - Hello
      description: Returns 'Hello' to the caller - hello
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /assign:
    x-swagger-router-controller: assign
    get:
      tags:
        - Assignment
      responses:
        "200":
          description: Success
          schema:
            required:
              - message
            properties:
              message:
                type: string
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string